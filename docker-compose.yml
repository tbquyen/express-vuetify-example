version: "3.2"
services:
    web-frontend:
        build:
            context: frontend
            dockerfile: Dockerfile
        container_name: web-frontend
        tty: true
        ports:
            - 80:80
        networks:
            - web-webnet
        depends_on:
            - web-backend
            - web-mongodb
        restart: always

    web-backend:
        build:
            context: backend
            dockerfile: Dockerfile
        container_name: web-backend
        tty: true
        volumes:
            - ./backend/log:/home/backend/log
            - ./backend/public:/home/backend/public
        ports:
            - 3000:3000
        environment:
            - NODE_ENV=development
        networks:
            - web-webnet
        depends_on:
            - web-mongodb
        restart: always

    web-mongodb:
        build:
            context: mongodb
            dockerfile: Dockerfile
        container_name: web-mongodb
        volumes:
            - ./mongodb/data:/data/db
            - ./mongodb/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        env_file: .env
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
        ports:
            - 27017:27017
        networks:
            - web-webnet
        restart: always

    web-mongo-express:
        image: mongo-express:0.54.0
        container_name: web-mongo-express
        env_file: .env
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            ME_CONFIG_MONGODB_SERVER: web-mongodb
            ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        links:
            - web-mongodb
        depends_on:
            - web-mongodb
        ports:
            - 8081:8081
        networks:
            - web-webnet
        restart: always
networks:
    web-webnet:
        ipam:
            config:
                - subnet: 192.168.1.0/24